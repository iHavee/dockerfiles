name: libtorrent-rasterbar

on:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/libtorrent-rasterbar.yml'
      - '!libtorrent-rasterbar/**'
  repository_dispatch:
    types: libtorrent-rasterbar-build

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  VERSION: 2.0.3

jobs:
  build386:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub Registry
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      - name: Build linux/386 Image
        run: |
          docker buildx build \
            --platform linux/386 \
            --build-arg VERSION=${VERSION} \
            --tag gists/libtorrent-rasterbar:386 \
            -f ./libtorrent-rasterbar/Dockerfile ./libtorrent-rasterbar/ \
            --push

  buildamd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub Registry
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          version: latest
      - name: Build linux/amd64 Image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --build-arg VERSION=${VERSION} \
            --tag gists/libtorrent-rasterbar:amd64 \
            -f ./libtorrent-rasterbar/Dockerfile ./libtorrent-rasterbar/ \
            --push

  buildarm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub Registry
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          version: latest
      - name: Build linux/arm64 Image
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --build-arg VERSION=${VERSION} \
            --tag gists/libtorrent-rasterbar:arm64 \
            -f ./libtorrent-rasterbar/Dockerfile ./libtorrent-rasterbar/ \
            --push

  buildarmv7:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub Registry
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          version: latest
      - name: Build linux/arm/v7 Image
        run: |
          docker buildx build \
            --platform linux/arm/v7 \
            --build-arg VERSION=${VERSION} \
            --tag gists/libtorrent-rasterbar:armv7 \
            -f ./libtorrent-rasterbar/Dockerfile ./libtorrent-rasterbar/ \
            --push

  buildarmv6:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub Registry
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          version: latest
      - name: Build linux/arm/v6 Image
        run: |
          docker buildx build \
            --platform linux/arm/v6 \
            --build-arg VERSION=${VERSION} \
            --tag gists/libtorrent-rasterbar:armv6 \
            -f ./libtorrent-rasterbar/Dockerfile ./libtorrent-rasterbar/ \
            --push

  buildppc64le:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub Registry
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          version: latest
      - name: Build linux/ppc64le Image
        run: |
          docker buildx build \
            --platform linux/ppc64le \
            --build-arg VERSION=${VERSION} \
            --tag gists/libtorrent-rasterbar:ppc64le \
            -f ./libtorrent-rasterbar/Dockerfile ./libtorrent-rasterbar/ \
            --push

  builds390x:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub Registry
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          version: latest
      - name: Build linux/s390x Image
        run: |
          docker buildx build \
            --platform linux/s390x \
            --build-arg VERSION=${VERSION} \
            --tag gists/libtorrent-rasterbar:s390x \
            -f ./libtorrent-rasterbar/Dockerfile ./libtorrent-rasterbar/ \
            --push

  manifest:
    runs-on: ubuntu-latest
    needs: [build386, buildamd64, buildarm64, buildarmv7, buildarmv6, buildppc64le, builds390x]
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub Registry
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      - name: Manifest create
        if: success()
        run: |
          # experimental features
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest create gists/libtorrent-rasterbar:${VERSION} \
            gists/libtorrent-rasterbar:386 \
            gists/libtorrent-rasterbar:amd64 \
            gists/libtorrent-rasterbar:arm64 \
            gists/libtorrent-rasterbar:armv7 \
            gists/libtorrent-rasterbar:armv6 \
            gists/libtorrent-rasterbar:ppc64le \
            gists/libtorrent-rasterbar:s390x
          docker manifest create gists/libtorrent-rasterbar:latest \
            gists/libtorrent-rasterbar:386 \
            gists/libtorrent-rasterbar:amd64 \
            gists/libtorrent-rasterbar:arm64 \
            gists/libtorrent-rasterbar:armv7 \
            gists/libtorrent-rasterbar:armv6 \
            gists/libtorrent-rasterbar:ppc64le \
            gists/libtorrent-rasterbar:s390x
      - name: Manifest push
        if: success()
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest push gists/libtorrent-rasterbar:${VERSION}
          docker manifest push gists/libtorrent-rasterbar:latest
      - name: Clear
        if: always()
        run: |
          rm -rf ${HOME}/.docker/config.json
